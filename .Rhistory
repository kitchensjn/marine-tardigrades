stoken <- httr::config(token = readRDS('.httr-oauth')[[1]])
setwd("~/")
setwd("~/")
stoken <- httr::config(token = readRDS('.httr-oauth')[[1]])
cat("google_key=AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo\n",
file=file.path(normalizePath("~/"), ".Renviron"),
append=TRUE)
mykey <- Sys.getenv("google_key")
mykey <- "AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo"
register_google(mykey)
get_heat_map(compiled, key = mykey, col = 'darkgreen', size = 2, distlab = F, f = 0.4)
register_google(key="AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo")
register_google(key="AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo")
get_heat_map(compiled, key = mykey, col = 'darkgreen', size = 2, distlab = F, f = 0.4)
View(compiled)
register_google(key="AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo")
cat("google_key=AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo\n",
file=file.path(normalizePath("~/"), ".Renviron"),
append=TRUE)
mykey <- Sys.getenv("google_key")
cat("google_key=AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo\n",
file=file.path(normalizePath("~/"), ".Renviron"),
append=TRUE)
mykey <- Sys.getenv("google_key")
library(ggmap)
register_google(mykey)
my_acts <- get_activity_list(stoken)
compiled <- compile_activities(my_acts)
get_heat_map(compiled, key = mykey, col = 'darkgreen', size = 2, distlab = F, f = 0.4)
lat_lon <- my_acts %>%
filter(!is.na(map.summary_polyline)) %>%
nest(., -activity_no) %>%
mutate(coords = map(data, get_latlon),
distance = map(coords, ~get_dists(.x$lon, .x$lat))) %>%
unnest(., data) %>%
unnest(., coords, distance)
my_acts <- compile_activities(get_activity_list(stoken))
# get lat lon and distance of every ride ####
lat_lon <- my_acts %>%
filter(!is.na(map.summary_polyline)) %>%
nest(., -activity_no) %>%
mutate(coords = map(data, get_latlon),
distance = map(coords, ~get_dists(.x$lon, .x$lat))) %>%
unnest(., data) %>%
unnest(., coords, distance)
View(my_acts)
app_name <- 'Paint The Town' # chosen by user
app_client_id  <- '51338' # an integer, assigned by Strava
app_secret <- '9077dd57d21d065c7104196b1338a578a27aa868' # an alphanumeric secret, assigned by Strava
# create the authentication token
stoken <- httr::config(token = strava_oauth(app_name, app_client_id, app_secret, app_scope="activity:read_all"))
cat("google_key=AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo\n",
file=file.path(normalizePath("~/"), ".Renviron"),
append=TRUE)
mykey <- Sys.getenv("google_key")
#mykey <- "AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo"
library(ggmap)
register_google(mykey)
my_acts <- compile_activities(get_activity_list(stoken))
View(my_acts)
# get lat lon and distance of every ride ####
lat_lon <- my_acts %>%
filter(!is.na(map.summary_polyline)) %>%
nest(., -activity_no) %>%
mutate(coords = map(data, get_latlon),
distance = map(coords, ~get_dists(.x$lon, .x$lat))) %>%
unnest(., data) %>%
unnest(., coords, distance)
# get lat lon and distance of every ride ####
lat_lon <- my_acts %>%
nest(., -activity_no) %>%
mutate(coords = map(data, get_latlon),
distance = map(coords, ~get_dists(.x$lon, .x$lat))) %>%
unnest(., data) %>%
unnest(., coords, distance)
View(my_acts)
library(dplyr)
# get lat lon and distance of every ride ####
lat_lon <- my_acts %>%
filter(!is.na(map.summary_polyline)) %>%
nest(., -activity_no) %>%
mutate(coords = map(data, get_latlon),
distance = map(coords, ~get_dists(.x$lon, .x$lat))) %>%
unnest(., data) %>%
unnest(., coords, distance)
library(rStrava)
library(gganimate)
library(dplyr)
library(tidyr)
library(purrr)
library(sp)
library(ggmap)
library(raster)
install.packages("raster")
library(raster)
# get lat lon and distance of every ride ####
lat_lon <- my_acts %>%
filter(!is.na(map.summary_polyline)) %>%
nest(., -activity_no) %>%
mutate(coords = map(data, get_latlon),
distance = map(coords, ~get_dists(.x$lon, .x$lat))) %>%
unnest(., data) %>%
unnest(., coords, distance)
View(my_acts)
# get lat lon and distance of every ride ####
lat_lon <- my_acts %>%
filter(!is.na(map.summary_polyline)) %>%
mutate(coords = map(data, get_latlon),
distance = map(coords, ~get_dists(.x$lon, .x$lat))) %>%
unnest(., data) %>%
unnest(., coords, distance)
app_name <- 'Paint The Town' # chosen by user
app_client_id  <- '51338' # an integer, assigned by Strava
app_secret <- '9077dd57d21d065c7104196b1338a578a27aa868' # an alphanumeric secret, assigned by Strava
# create the authentication token
stoken <- httr::config(token = strava_oauth(app_name, app_client_id, app_secret, app_scope="activity:read_all"))
cat("google_key=AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo\n",
file=file.path(normalizePath("~/"), ".Renviron"),
append=TRUE)
mykey <- Sys.getenv("google_key")
#mykey <- "AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo"
library(rStrava)
library(dplyr)
library(tidyr)
library(purrr)
library(sp)
library(ggmap)
library(raster)
# columns to keep
desired_columns <- c('distance', 'elapsed_time', 'moving_time', 'start_date', 'start_date_local', 'type', 'map.summary_polyline', 'location_city', 'upload_id', 'start_latitude', 'start_longitude')
# keep only desired columns
my_acts <- dplyr::select(my_acts, match(desired_columns, names(my_acts)))
# transformations ####
my_acts <- mutate(my_acts,
activity_no = seq(1,n(), 1),
elapsed_time = elapsed_time/60/60,
moving_time = moving_time/60/60,
date = gsub("T.*$", '', start_date) %>%
as.POSIXct(., format = '%Y-%m-%d'),
EUdate = format(date, '%d/%m/%Y'),
month = format(date, "%m"),
day = format(date, "%d"),
year = format(date, "%Y")) %>%
mutate_at(., c('month', 'day'), as.numeric)
my_acts <- compile_activities(my_acts)
my_acts <- get_activity_list(stoken, id = 19905425)
my_acts <- get_activity_list(stoken, id = 19905425)
# create the authentication token
stoken <- httr::config(token = strava_oauth(app_name, app_client_id, app_secret, app_scope="activity:read_all"))
my_acts <- get_activity_list(stoken, id = 19905425)
my_acts <- get_activity_list(stoken, id=19905425)
my_acts <- get_activity_list(stoken, id="19905425")
my_acts <- get_activity_list(stoken, id="19905425")
app_name <- 'Paint The Town' # chosen by user
app_client_id  <- '51338' # an integer, assigned by Strava
app_secret <- '9077dd57d21d065c7104196b1338a578a27aa868' # an alphanumeric secret, assigned by Strava
# create the authentication token
stoken <- httr::config(token = strava_oauth(app_name, app_client_id, app_secret, app_scope="activity:read_all"))
cat("google_key=AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo\n",
file=file.path(normalizePath("~/"), ".Renviron"),
append=TRUE)
mykey <- Sys.getenv("google_key")
#mykey <- "AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo"
library(rStrava)
library(dplyr)
library(tidyr)
library(purrr)
library(sp)
library(ggmap)
library(raster)
my_acts <- get_activity_list(stoken, id="19905425")
my_acts <- get_activity_list(stoken)
View(my_acts)
my_acts <- compile_activities(my_acts)
# columns to keep
desired_columns <- c('distance', 'elapsed_time', 'moving_time', 'start_date', 'start_date_local', 'type', 'map.summary_polyline', 'location_city', 'upload_id', 'start_latitude', 'start_longitude')
# keep only desired columns
my_acts <- dplyr::select(my_acts, match(desired_columns, names(my_acts)))
# keep only desired columns
my_acts <- dplyr::select(my_acts, match(desired_columns, names(my_acts)))
# transformations ####
my_acts <- mutate(my_acts,
activity_no = seq(1,n(), 1),
elapsed_time = elapsed_time/60/60,
moving_time = moving_time/60/60,
date = gsub("T.*$", '', start_date) %>%
as.POSIXct(., format = '%Y-%m-%d'),
EUdate = format(date, '%d/%m/%Y'),
month = format(date, "%m"),
day = format(date, "%d"),
year = format(date, "%Y")) %>%
mutate_at(., c('month', 'day'), as.numeric)
# get lat lon and distance of every ride ####
lat_lon <- my_acts %>%
filter(!is.na(map.summary_polyline)) %>%
nest(., -activity_no) %>%
mutate(coords = map(data, get_latlon),
distance = map(coords, ~get_dists(.x$lon, .x$lat))) %>%
unnest(., data) %>%
unnest(., coords, distance)
View(my_acts)
library(rStrava)
library(dplyr)
library(tidyr)
library(purrr)
library(sp)
library(ggmap)
library(raster)
# get lat lon and distance of every ride ####
lat_lon <- my_acts %>%
filter(!is.na(map.summary_polyline)) %>%
nest(., -activity_no) %>%
mutate(coords = map(data, get_latlon),
distance = map(coords, ~get_dists(.x$lon, .x$lat))) %>%
unnest(., data) %>%
unnest(., coords, distance)
install.packages("googlePolylines")
library(googlePolylines)
app_name <- 'Paint The Town' # chosen by user
app_client_id  <- '51338' # an integer, assigned by Strava
app_secret <- '9077dd57d21d065c7104196b1338a578a27aa868' # an alphanumeric secret, assigned by Strava
# create the authentication token
stoken <- httr::config(token = strava_oauth(app_name, app_client_id, app_secret, app_scope="activity:read_all"))
cat("google_key=AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo\n",
file=file.path(normalizePath("~/"), ".Renviron"),
append=TRUE)
mykey <- Sys.getenv("google_key")
library(rStrava)
library(googlePolylines)
#library(dplyr)
#library(tidyr)
#library(purrr)
#library(sp)
#library(ggmap)
#library(raster)
my_acts <- compile_activities(get_activity_list(stoken))
View(my_acts)
decode(my_acts$map.summary_polyline)
View(my_acts)
library(leaflet)
install.packages("leaflet")
library(leaflet)
leaflet(data=my_acts_decode) %>%
addPolylines()
my_acts <- compile_activities(get_activity_list(stoken))
my_acts_decode <- decode(my_acts$map.summary_polyline)
leaflet(data=my_acts_decode) %>%
addPolylines()
leaflet(data=my_acts_decode[1]) %>%
addPolylines()
leaflet(data=my_acts_decode[[1]]) %>%
addPolylines()
View(my_acts_decode)
View(my_acts_decode)
leaflet(data=my_acts_decode[[1]]) %>%
addPolylines(lng=~lon,
lat=~lat)
leaflet(data=my_acts_decode) %>%
addPolylines(lng=~lon,
lat=~lat)
leaflet(data=my_acts_decode) %>%
addTiles() %>%
addPolylines(lng=~lon,
lat=~lat)
leaflet(data=my_acts_decode[[1]]) %>%
addTiles() %>%
addPolylines(lng=~lon,
lat=~lat)
leaflet(data=my_acts_decode[[1]]) %>%
addTiles() %>%
addPolylines(lng=~lon,
lat=~lat)
leaflet(data=my_acts_decode[[1:3]]) %>%
addTiles() %>%
addPolylines(lng=~lon,
lat=~lat)
leaflet(data=my_acts_decode[[1:3]]) %>%
addTiles() %>%
addPolylines(lng=~lon,
lat=~lat)
leaflet(data=my_acts_decode[[1]]) %>%
addTiles() %>%
addPolylines(lng=~lon,
lat=~lat)
my_acts_decode <- decode(my_acts$map.summary_polyline)
dt <- rbindlist(my_acts_decode, idcol = "id")
dt <- rbindList(my_acts_decode, idcol = "id")
?rbindlist
??rbindlist
library(data.table)
install.packages("data.table")
library(data.table)
my_acts <- compile_activities(get_activity_list(stoken))
my_acts_decode <- decode(my_acts$map.summary_polyline)
dt <- rbindList(my_acts_decode, idcol = "id")
dt <- rbindlist(my_acts_decode, idcol = "id")
View(dt)
library(sp)
lst_lines <- lapply(unique(dt$id), function(x){
## the order of the 'lon' and 'lat' fields is important
Lines(Line(dt[id == x, .(lon, lat)]), ID = x)
})
## spatial lines object
spl_lst <- SpatialLines(lst_lines)
leaflet(data=spl_lst) %>%
addTiles() %>%
addPolylines()
View(spl_lst)
leaflet(data=spl_lst) %>%
addTiles() %>%
addPolylines(color="id")
View(spl_lst)
leaflet(data=spl_lst) %>%
addTiles() %>%
addPolylines(color="ID")
leaflet(data=spl_lst) %>%
addTiles() %>%
addPolylines()
leaflet(data=spl_lst) %>%
addTiles() %>%
addPolylines()
View(spl_lst)
leaflet(data=spl_lst) %>%
addTiles() %>%
addPolylines()
View(my_acts_decode)
decode(my_acts$map.summary_polyline)
View(spl_lst)
runs <- compile_activities(get_activity_list(stoken))[]
runs_decode <- decode(runs$map.summary_polyline)
runs_dt <- rbindlist(runs_decode, idcol = "id")
runs_lst_lines <- lapply(unique(runs_dt$id), function(x){Lines(Line(runs_dt[id == x, .(lon, lat)]), ID = x)})
## spatial lines object
runs_spl_lst <- SpatialLines(runs_lst_lines)
leaflet(data=runs_spl_lst) %>%
addTiles() %>%
addPolylines()
View(runs)
my_acts <- compile_activities(get_activity_list(stoken))
runs <- my_acts[which(my_acts$type=="Run"),]
runs_decode <- decode(runs$map.summary_polyline)
runs_dt <- rbindlist(runs_decode, idcol = "id")
runs_lst_lines <- lapply(unique(runs_dt$id), function(x){Lines(Line(runs_dt[id == x, .(lon, lat)]), ID = x)})
## spatial lines object
runs_spl_lst <- SpatialLines(runs_lst_lines)
leaflet(data=runs_spl_lst) %>%
addTiles() %>%
addPolylines()
leaflet() %>%
addTiles() %>%
addPolylines(data=runs_spl_lst, color="red")
View(runs_decode)
runs_decode[[1]]
colnames(runs_decode[[1]])
runs_decord[[1]]$lat <- round(runs_decode[[1]]$lat, 2)
runs_decode[[1]]$lat <- round(runs_decode[[1]]$lat, 2)
runs_decode[[1]]$lon <- round(runs_decode[[1]]$lon, 2)
runs_decode[[1]]
runs_dt <- rbindlist(runs_decode, idcol = "id")
leaflet() %>%
addTiles() %>%
addPolylines(data=runs_decode[[1]], color="red")
leaflet() %>%
addTiles() %>%
addPolylines(data=runs_decode[[1]], color="red")
leaflet(data=runs_decode[[1]]) %>%
addTiles() %>%
addPolylines(lat=~lat, lon=~lon, color="red")
leaflet(data=runs_decode[[1]]) %>%
addTiles() %>%
addPolylines(lat=~lat, long=~lon, color="red")
leaflet(data=runs_decode[[1]]) %>%
addTiles() %>%
addPolylines(lat=lat, lon=lon, color="red")
leaflet(data=runs_decode[[1]]) %>%
addTiles() %>%
addPolylines(lat=lat, lng=lon, color="red")
leaflet(data=runs_decode[[1]]) %>%
addTiles() %>%
addPolylines(lat=~lat, lng=~lon, color="red")
runs_decode[[1]]$lat <- round(runs_decode[[1]]$lat, 3)
runs_decode <- decode(runs$map.summary_polyline)
runs_decode[[1]]$lat <- round(runs_decode[[1]]$lat, 3)
runs_decode[[1]]$lon <- round(runs_decode[[1]]$lon, 3)
runs_decode[[1]]
runs_dt <- rbindlist(runs_decode, idcol = "id")
runs_lst_lines <- lapply(unique(runs_dt$id), function(x){Lines(Line(runs_dt[id == x, .(lon, lat)]), ID = x)})
runs_spl_lst <- SpatialLines(runs_lst_lines)
leaflet(data=runs_decode[[1]]) %>%
addTiles() %>%
addPolylines(lat=~lat, lng=~lon, color="red")
runs_decode <- decode(runs$map.summary_polyline)
runs_decode[[1]]$lat <- round(runs_decode[[1]]$lat, 4)
runs_decode[[1]]$lon <- round(runs_decode[[1]]$lon, 4)
runs_decode[[1]]
runs_dt <- rbindlist(runs_decode, idcol = "id")
runs_lst_lines <- lapply(unique(runs_dt$id), function(x){Lines(Line(runs_dt[id == x, .(lon, lat)]), ID = x)})
runs_spl_lst <- SpatialLines(runs_lst_lines)
leaflet(data=runs_decode[[1]]) %>%
addTiles() %>%
addPolylines(lat=~lat, lng=~lon, color="red")
runs_decode <- decode(runs$map.summary_polyline)
runs_dt <- rbindlist(runs_decode, idcol = "id")
runs_lst_lines <- lapply(unique(runs_dt$id), function(x){Lines(Line(runs_dt[id == x, .(lon, lat)]), ID = x)})
runs_spl_lst <- SpatialLines(runs_lst_lines)
leaflet(data=runs_decode[[1]]) %>%
addTiles() %>%
addPolylines(lat=~lat, lng=~lon, color="red")
leaflet() %>%
addTiles() %>%
addPolylines(data=runs_spl_list, color="red")
my_acts <- compile_activities(get_activity_list(stoken))
runs <- my_acts[which(my_acts$type=="Run"),]
runs_decode <- decode(runs$map.summary_polyline)
runs_dt <- rbindlist(runs_decode, idcol = "id")
runs_lst_lines <- lapply(unique(runs_dt$id), function(x){Lines(Line(runs_dt[id == x, .(lon, lat)]), ID = x)})
runs_spl_lst <- SpatialLines(runs_lst_lines)
leaflet() %>%
addTiles() %>%
addPolylines(data=runs_spl_list, color="red")
leaflet() %>%
addTiles() %>%
addPolylines(data=runs_spl_lst, color="red")
leaflet() %>%
addTiles() %>%
addPolylines(data=runs_spl_lst[[1]], color="red")
leaflet() %>%
addTiles() %>%
addPolylines(data=runs_spl_lst[1], color="red")
View(runs_decode)
leaflet() %>%
addTiles() %>%
addPolygon(data=runs_spl_lst[1], color="red")
leaflet() %>%
addTiles() %>%
addPolygons(data=runs_spl_lst[1], color="red")
leaflet() %>%
addTiles() %>%
addPolylines(data=runs_spl_lst[1], color="red")
app_name <- 'Paint The Town' # chosen by user
app_client_id  <- '51338' # an integer, assigned by Strava
app_secret <- '9077dd57d21d065c7104196b1338a578a27aa868' # an alphanumeric secret, assigned by Strava
# create the authentication token
stoken <- httr::config(token = strava_oauth(app_name, app_client_id, app_secret, app_scope="activity:read_all"))
cat("google_key=AIzaSyDWVj4x2SjWj_W1I8RRGM9q78webusZJYo\n",
file=file.path(normalizePath("~/"), ".Renviron"),
append=TRUE)
mykey <- Sys.getenv("google_key")
library(rStrava)
library(googlePolylines)
library(leaflet)
library(data.table)
library(sp)
my_acts <- compile_activities(get_activity_list(stoken, id=42933948))
my_acts <- compile_activities(get_activity_list(stoken, id = 42933948))
my_acts <- compile_activities(get_activity_list(stoken))
?get_activity_list
my_acts <- compile_activities(get_activity_list(stoken, id=3805141178))
my_acts <- compile_activities(get_activity_list(stoken))
my_acts <- compile_activities(get_activity_list(stoken, id="gsgis", club=TRUE))
club_acts <- get_activity_list(stoken, id="gsgis", club=TRUE)
View(club_acts)
club_acts <- compile_club_activities(get_activity_list(stoken, id="gsgis", club=TRUE))
View(club_acts)
club_acts <- get_activity_list(stoken, id="gsgis", club=TRUE)
View(club_acts)
my_acts <- compile_activities(get_activity_list(stoken))
View(my_acts)
my_club <- get_club(stoken, id="gsgis", request="activities")
View(my_club)
install.packages("mapview")
webshot::install_phantomjs()
shiny::runApp('Downloads/ShinyApplication_Dropdowns')
install.packages("shinyWidgets")
runApp('Downloads/ShinyApplication_Dropdowns')
install.packages("openxlsx")
install.packages("geofacet")
runApp('Downloads/ShinyApplication_Dropdowns')
install.package("albersusa")
webshot::install_phantomjs()
install.packages("albersusa")
source('Downloads/ShinyApplication_Dropdowns/setup.R')
runApp('Downloads/ShinyApplication_Dropdowns')
install.packages("albersusa")
remotes::install_git("https://git.rud.is/hrbrmstr/albersusa.git")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
shiny::runApp('Downloads/ShinyApplication_Dropdowns')
runApp('Downloads/ShinyApplication_Dropdowns')
runApp('Downloads/ShinyApplication_Dropdowns')
runApp('Downloads/ShinyApplication_Dropdowns')
runApp('Downloads/ShinyApplication_Dropdowns')
runApp('Downloads/ShinyApplication_Dropdowns')
runApp('Downloads/ShinyApplication_Dropdowns')
runApp('Downloads/ShinyApplication_Dropdowns')
runApp('Downloads/ShinyApplication_Dropdowns')
runApp('Downloads/ShinyApplication_Dropdowns')
runApp('Downloads/ShinyApplication_Dropdowns')
runApp('Downloads/ShinyApplication_Dropdowns')
shiny::runApp('Documents/GitHub/marine-tardigrades')
source('Documents/GitHub/marine-tardigrades/setup.R')
setwd("~/Documents/GitHub/marine-tardigrades")
source('setup.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
